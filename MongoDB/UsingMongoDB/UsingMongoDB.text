1. Create a database called 'my_first_db'.
> use my_first_db
switched to db my_first_db

2. Create students collection.
> db.createCollection("students")
{ "ok" : 1 }

3. Create 5 students with the appropriate info. // Each document you insert into this collection should have the following format: ({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}})
> db.students.insert({name: "Carlos" , home_state: "California", lucky_number: 7 , birthday: {month: 1, day: 26 , year: 1992} })
WriteResult({ "nInserted" : 1 })
> db.students.insert({name: "Aidee" , home_state: "California", lucky_number: 11 , birthday: {month: 10, day: 22 , year: 1995} })
WriteResult({ "nInserted" : 1 })
> db.students.insert({name: "Agui" , home_state: "California", lucky_number: 4 , birthday: {month: 4, day: 23 , year: 1990} })
WriteResult({ "nInserted" : 1 })
> db.students.insert({name: "Kai" , home_state: "Washington", lucky_number: 1 , birthday: {month: 9, day: 25 , year: 2020} })
WriteResult({ "nInserted" : 1 })
> db.students.insert({name: "Alec" , home_state: "Washington", lucky_number: 10 , birthday: {month: 3, day: 23 , year: 1992} })
WriteResult({ "nInserted" : 1 })

4. Get all students.
> db.students.find().pretty()
{
        "_id" : ObjectId("63598905b935078241c236c5"),
        "name" : "Carlos",
        "home_state" : "California",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 1,
                "day" : 26,
                "year" : 1992
        }
}
{
        "_id" : ObjectId("63598951b935078241c236c6"),
        "name" : "Aidee",
        "home_state" : "California",
        "lucky_number" : 11,
        "birthday" : {
                "month" : 10,
                "day" : 22,
                "year" : 1995
        }
}
{
        "_id" : ObjectId("63598975b935078241c236c7"),
        "name" : "Agui",
        "home_state" : "California",
        "lucky_number" : 4,
        "birthday" : {
                "month" : 4,
                "day" : 23,
                "year" : 1990
        }
}
{
        "_id" : ObjectId("635989d0b935078241c236c8"),
        "name" : "Kai",
        "home_state" : "Washington",
        "lucky_number" : 1,
        "birthday" : {
                "month" : 9,
                "day" : 25,
                "year" : 2020
        }
}
{
        "_id" : ObjectId("63598a03b935078241c236c9"),
        "name" : "Alec",
        "home_state" : "Washington",
        "lucky_number" : 10,
        "birthday" : {
                "month" : 3,
                "day" : 23,
                "year" : 1992
        }
}

5. Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).
> db.students.find({$or: [{home_state: "California"}, {home_state: "Washington"}]}).pretty()
{
        "_id" : ObjectId("63598905b935078241c236c5"),
        "name" : "Carlos",
        "home_state" : "California",
        "lucky_number" : 7,
        "birthday" : {
                "month" : 1,
                "day" : 26,
                "year" : 1992
        }
}
{
        "_id" : ObjectId("63598951b935078241c236c6"),
        "name" : "Aidee",
        "home_state" : "California",
        "lucky_number" : 11,
        "birthday" : {
                "month" : 10,
                "day" : 22,
                "year" : 1995
        }
}
{
        "_id" : ObjectId("63598975b935078241c236c7"),
        "name" : "Agui",
        "home_state" : "California",
        "lucky_number" : 4,
        "birthday" : {
                "month" : 4,
                "day" : 23,
                "year" : 1990
        }
}
{
        "_id" : ObjectId("635989d0b935078241c236c8"),
        "name" : "Kai",
        "home_state" : "Washington",
        "lucky_number" : 1,
        "birthday" : {
                "month" : 9,
                "day" : 25,
                "year" : 2020
        }
}
{
        "_id" : ObjectId("63598a03b935078241c236c9"),
        "name" : "Alec",
        "home_state" : "Washington",
        "lucky_number" : 10,
        "birthday" : {
                "month" : 3,
                "day" : 23,
                "year" : 1992
        }
}

6.  Get all students whose lucky number is greater than 3
> db.students.find({lucky_number: {$gt: 3}})
{ "_id" : ObjectId("63598905b935078241c236c5"), "name" : "Carlos", "home_state" : "California", "lucky_number" : 7, "birthday" : { "month" : 1, "day" : 26, "year" : 1992 } }
{ "_id" : ObjectId("63598951b935078241c236c6"), "name" : "Aidee", "home_state" : "California", "lucky_number" : 11, "birthday" : { "month" : 10, "day" : 22, "year" : 1995 } }
{ "_id" : ObjectId("63598975b935078241c236c7"), "name" : "Agui", "home_state" : "California", "lucky_number" : 4, "birthday" : { "month" : 4, "day" : 23, "year" : 1990 } }
{ "_id" : ObjectId("63598a03b935078241c236c9"), "name" : "Alec", "home_state" : "Washington", "lucky_number" : 10, "birthday" : { "month" : 3, "day" : 23, "year" : 1992 } }

7. Get all students whose lucky number is less than or equal to 10
> db.students.find({lucky_number: {$lte: 10}})
{ "_id" : ObjectId("63598905b935078241c236c5"), "name" : "Carlos", "home_state" : "California", "lucky_number" : 7, "birthday" : { "month" : 1, "day" : 26, "year" : 1992 } }
{ "_id" : ObjectId("63598975b935078241c236c7"), "name" : "Agui", "home_state" : "California", "lucky_number" : 4, "birthday" : { "month" : 4, "day" : 23, "year" : 1990 } }
{ "_id" : ObjectId("635989d0b935078241c236c8"), "name" : "Kai", "home_state" : "Washington", "lucky_number" : 1, "birthday" : { "month" : 9, "day" : 25, "year" : 2020 } }
{ "_id" : ObjectId("63598a03b935078241c236c9"), "name" : "Alec", "home_state" : "Washington", "lucky_number" : 10, "birthday" : { "month" : 3, "day" : 23, "year" : 1992 } }

8. Get all students whose lucky number is between 1 and 9 (inclusive)
> db.students.find({lucky_number: {$gte: 1, $lte: 9}})
{ "_id" : ObjectId("63598905b935078241c236c5"), "name" : "Carlos", "home_state" : "California", "lucky_number" : 7, "birthday" : { "month" : 1, "day" : 26, "year" : 1992 } }
{ "_id" : ObjectId("63598975b935078241c236c7"), "name" : "Agui", "home_state" : "California", "lucky_number" : 4, "birthday" : { "month" : 4, "day" : 23, "year" : 1990 } }
{ "_id" : ObjectId("635989d0b935078241c236c8"), "name" : "Kai", "home_state" : "Washington", "lucky_number" : 1, "birthday" : { "month" : 9, "day" : 25, "year" : 2020 } }

9. Add a field named 'interests' to all student documents in the collection. The field should be an array and contain the following entries: 'coding', 'brunch', MongoDB'. Add this field to all documents using a single command.
> db.students.updateMany({}, {$set: {interests: ['coding', 'brunch', 'MongoDB']}})
{ "acknowledged" : true, "matchedCount" : 5, "modifiedCount" : 5 }

10.  Add some unique interests for each particular student into each of their interest arrays.
> db.students.update({name: "Carlos"}, {$push: {interests: 'football'}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.students.update({name: "Agui"}, {$push: {interests: 'dbz'}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.students.update({name: "Aidee"}, {$push: {interests: 'make-up'}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.students.update({name: "Kai"}, {$push: {interests: 'walks'}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.students.update({name: "Alec"}, {$push: {interests: 'music'}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

11. Add the interest 'taxes' into someone's interest array.
> db.students.update({name: "Carlos"}, {$push: {interests: 'taxes'}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

12.  Remove the 'taxes' interest you just added.
> db.students.update({name: "Carlos"}, {$pull: {interests: 'taxes'}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

13. Remove all students who are from California.
> db.students.remove({home_state: "California"})
WriteResult({ "nRemoved" : 3 })

14. Remove a student by name.
> db.students.remove({name: "Alec"})
WriteResult({ "nRemoved" : 1 })

15. Remove a student whose lucky number is greater than 5 (JUST ONE)
> db.students.remove({lucky_number: {$gt: 5}}, true)
WriteResult({ "nRemoved" : 0 })

16. Add a field to each student collection called 'number_of_belts' and set it to 0.
> db.students.updateMany({}, {$set: {number_of_belts: 0}})
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }

17. Increment this field by 1 for all students in Washington (Seattle Dojo).
> db.students.updateMany({home_state: "Washington"}, {$inc: {number_of_belts: 1}})
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }

18.  Rename the 'number_of_belts' field to 'belts_earned'
> db.students.updateMany({}, {$rename: {"number_of_belts":"belts_earned"}})
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }

19. Remove the 'lucky_number' field.
> db.students.updateMany({}, {$unset: {"lucky_number":""}})
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }

20. Add a 'updated_on' field, and set the value as the current date.
> db.students.updateMany({}, {$set: {"updated_on": Date() }})
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }


> db.students.find().pretty()
{
        "_id" : ObjectId("635989d0b935078241c236c8"),
        "name" : "Kai",
        "home_state" : "Washington",
        "birthday" : {
                "month" : 9,
                "day" : 25,
                "year" : 2020
        },
        "interests" : [
                "coding",
                "brunch",
                "MongoDB",
                "walks"
        ],
        "belts_earned" : 1,
        "updated_on" : "Wed Oct 26 2022 13:10:02 GMT-0700 (Pacific Daylight Time)"
}